name: terraform-state-artifact
description: 'Downloads and uploads your Terraform statefile as an encrypted Github Artifact'
author: 'Sturla Bragason & Gioele De Vitti'

inputs:
  encryption-key:
    description: 'Used as a key to encrypt and decrypt the statefile artifact'
    required: true
  download-upload:
    description: 'Whether to download and decrypt or upload and encrypt.'
    required: true
  statefile-location:
    description: 'The location of your Terraform statefile.'
    required: false
    default: ''

runs:
  using: "composite"
  steps:
    - id: terraform-state-artifact-download
      if: ${{ github.event.inputs.download-upload == 'download' }}
      run: |
        $ArtifactName = "${{ github.ref_name }}" + "${{ inputs.statefile-location }}"
        $Repo = "${{ github.repository }}"
        $BaseUri = "https://api.github.com"
        $ArtifactUri = "$BaseUri/repos/$Repo/actions/artifacts"
        $Token = "${{ github.token }}" | ConvertTo-SecureString -AsPlainText
        $RestResponse = Invoke-RestMethod -Authentication Bearer -Uri $ArtifactUri -Token $Token | Select-Object -ExpandProperty artifacts
        if ($RestResponse){
          $MostRecentArtifactURI = $RestResponse | Sort-Object -Property created_at -Descending | where name -eq $ArtifactName | Select-Object -First 1 | Select-Object -ExpandProperty archive_download_url
          Write-Host "Most recent artifact URI = $MostRecentArtifactURI"
          if ($MostRecentArtifactURI){
            Invoke-RestMethod -uri $MostRecentArtifactURI -Token $Token -Authentication bearer -outfile ./state.zip
            Expand-Archive ./state.zip
            openssl enc -d -in ./state/terraform.tfstate.enc -aes-256-cbc -pbkdf2 -pass pass:"${{ inputs.encryption-key }}" -out ."${{ inputs.statefile-location }}"/terraform.tfstate
          }
        }
      shell: pwsh
    - id: terraform-state-artifact-upload
      if: ${{ github.event.inputs.download-upload == 'upload' }}
      run: |
        $ArtifactName = "${{ github.ref_name }}" + "${{ inputs.statefile-location }}"
        $StateExists = Test-Path -Path ."${{ inputs.statefile-location }}"/terraform.tfstate -PathType Leaf
        if ($StateExists){
          openssl enc -in ."${{ inputs.statefile-location }}"/terraform.tfstate -aes-256-cbc -pbkdf2 -pass pass:"${{ inputs.encryption-key }}" -out ."${{ inputs.statefile-location }}"/terraform.tfstate.enc
        }
      shell: pwsh
    - uses: actions/upload-artifact@v3
      if: ${{ github.event.inputs.download-upload == 'upload' }}
      with:
        name: terraform-state
        path: ."${{ inputs.statefile-location }}"/terraform.tfstate.enc
branding:
  icon: 'cloud'
  color: 'gray-dark'